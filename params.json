{"name":"Connect-dynamodb","body":"\r\n# Connect DynamoDB\r\n\r\nconnect-dynamodb is a DynamoDB session store backed by [dynode](https://github.com/Wantworthy/dynode)\r\n\r\n## Installation\r\n\r\n\t  $ npm install connect-dynamodb\r\n\r\n## Options\r\n  \r\n  - `client` An existing dynode client object you normally get from `new (dynode.Client)({accessKeyId: \"AWSAccessKey\", secretAccessKey: \"SecretAccessKey\"});`\r\n  - `table` DynamoDB server session table name\r\n  - `accessKeyId` AWS accessKeyId\r\n  - `secretAccessKey` AWS secretAccessKey\r\n  - `prefix` Key prefix defaulting to \"sess\"\r\n  - `reapInterval` How often expired sessions should be cleaned up\r\n\r\n## Usage\r\n\r\n    var connect = require('connect')\r\n\t \t  , DynamoDBStore = require('connect-dynamodb')(connect);\r\n\t \t  \r\n\tvar store = new DynamoDBStore({\r\n\t  // Name of the table you would like to use for sessions.\r\n\t  table: 'myapp-sessions',\r\n\t\r\n\t  // AWSAccessKey\r\n\t  accessKeyId: 'AWSAccessKey',\r\n\t  \r\n\t  // AWS secretAccessKey\r\n\t  secretAccessKey: 'SecretAccessKey',\r\n\t  \r\n\t  // Optional. How often expired sessions should be cleaned up.\r\n  \t  // Defaults to 600000 (10 minutes).\r\n  \t  reapInterval: 600000\r\n\t});\r\n\t\r\n    var server = connect.createServer();\r\n\tserver.use(connect.session({secret: 'YourSecretKey', store: store });\r\n\r\n Or with [express](http://expressjs.com/)\r\n \t\r\n \tvar store = new DynamoDBStore({\r\n\t  // Name of the table you would like to use for sessions.\r\n\t  table: 'myapp-sessions',\r\n\t\r\n\t  // AWSAccessKey\r\n\t  accessKeyId: 'AWSAccessKey',\r\n\t  \r\n\t  // AWS secretAccessKey\r\n\t  secretAccessKey: 'SecretAccessKey'\r\n\t});\r\n\t\r\n    var app = express.createServer(\r\n\t\t  express.cookieParser()\r\n\t\t, express.session({ secret: 'YourSecretKey', store: store)\r\n\t  );\r\n","google":"","tagline":"DynamoDB session store for Connect","note":"Don't delete this file! It's used internally to help with page regeneration."}